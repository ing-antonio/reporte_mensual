table.width = "100%",
table.font.size = px(13),
data_row.padding = px(4)
)
# Mostrar
gt_tabla
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# ðŸ’¡ CÃ“DIGO PARA MINI TABLAS DE ACUMULADOS ðŸ’¡
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# 1. Definir etiquetas dinÃ¡micas por aÃ±o
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
fecha_corte <- floor_date(Sys.Date(), unit = "month")
fecha_ultimo_mes <- fecha_corte - months(1)
nombre_mes <- format(fecha_ultimo_mes, "%B") |> tools::toTitleCase()  # "Junio", "Julio", etc.
# Etiquetas de totales acumulados
anios <- c(2019,2023,2024, 2025)
etiquetas_totales <- setNames(
glue("{nombre_mes} {anios}"),
paste0("total_", anios)
)
# Etiquetas de variaciones
etiquetas_variaciones <- c(
var_2025_vs_2019 = "Var % vs 2019",
var_2025_vs_2023 = "Var % vs 2023",
var_2025_vs_2024 = "Var % vs 2024"
)
# Todas las etiquetas juntas
etiquetas_finales <- c(
categoria_delito_modificada = "Delito",
etiquetas_totales,
etiquetas_variaciones
)
ruta_csv <- here("auxiliares", "titulos_tarjetas.csv")
titulos_existentes <- read_csv(ruta_csv, show_col_types = FALSE)
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# 2. FunciÃ³n para generar mini tabla gt por delito
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
generar_mini_tabla_delito <- function(nombre_delito, df) {
mini_tabla <- df %>%
filter(categoria_delito_modificada == nombre_delito) %>%
select(
categoria_delito_modificada,
total_2019, total_2023, total_2024, total_2025,
var_2025_vs_2019, var_2025_vs_2023, var_2025_vs_2024
) %>%
gt() %>%
cols_label(.list = etiquetas_finales) %>%
fmt_number(
columns = starts_with("total_"),
decimals = 0,
sep_mark = ","
) %>%
##  Estilo encabezados
tab_style(
style = list(
cell_fill(color = "#9d2041ff"),
cell_text(color = "white", weight = "bold", size = px(24))
),
locations = cells_column_labels(everything())
) %>%
tab_style(
style = cell_text(weight = "bold"),
locations = cells_body(rows = categoria_delito_modificada == nombre_delito)
) %>%
tab_style(
style = list(cell_fill(color = "#E7FBF1"), cell_text(color = "#2A6F4D")),
locations = list(
cells_body(columns = var_2025_vs_2019, rows = str_detect(var_2025_vs_2019, "-")),
cells_body(columns = var_2025_vs_2023, rows = str_detect(var_2025_vs_2023, "-")),
cells_body(columns = var_2025_vs_2024, rows = str_detect(var_2025_vs_2024, "-"))
)
) %>%
tab_style(
style = list(cell_fill(color = "#FCDADE"), cell_text(color = "#940B1C")),
locations = list(
cells_body(columns = var_2025_vs_2019, rows = !str_detect(var_2025_vs_2019, "-") & var_2025_vs_2019 != "0%"),
cells_body(columns = var_2025_vs_2023, rows = !str_detect(var_2025_vs_2023, "-") & var_2025_vs_2023 != "0%"),
cells_body(columns = var_2025_vs_2024, rows = !str_detect(var_2025_vs_2024, "-") & var_2025_vs_2024 != "0%")
)
) %>%
tab_style(
style = list(cell_fill(color = "#DDDDDD"), cell_text(color = "#252627")),
locations = list(
cells_body(columns = var_2025_vs_2019, rows = var_2025_vs_2019 == "0%"),
cells_body(columns = var_2025_vs_2023, rows = var_2025_vs_2023 == "0%"),
cells_body(columns = var_2025_vs_2024, rows = var_2025_vs_2024 == "0%")
)
)  %>%
tab_style(
style = list(cell_fill(color="#f2f2f2ff"), cell_text(color = "#58595A")), #color gris para el cuerpo de la tabla
locations = cells_body(
columns = c(categoria_delito_modificada,total_2019, total_2023, total_2024, total_2025)
)
) %>%
tab_options(
table.font.names = "roboto",
table.width = "100%",
table.font.size = px(24),
data_row.padding = px(4)
)
# Nombre limpio para el archivo
abreviaciones <- c(
"Homicidio doloso" = "HD",
"Homicidio doloso (vÃ­ctimas)" = "HDV",
"Lesiones dolosas por disparo de arma de fuego" = "LD",
"Robo de vehÃ­culo con y sin violencia" = "RV",
"Alto Impacto" = "AI"
# agrega mÃ¡s si se necesitan
)
nombre_archivo <- if (!is.na(abreviaciones[nombre_delito])) {
abreviaciones[nombre_delito]
} else {
str_replace_all(str_to_lower(nombre_delito), "[^a-z0-9]+", "_")
}
# Guardar como PNG
gtsave(
data = mini_tabla,
filename = here("salidas", glue("TblMes_{nombre_archivo}.png")),
vwidth = 1150,
vheight = 200
)
# Extraer variaciÃ³n y generar tarjeta
variacion19 <- df %>%
filter(categoria_delito_modificada == nombre_delito) %>%
pull(var_2025_vs_2019)
if (length(variacion19) > 0 && !is.na(variacion19)) {
generar_tarjeta_variacion(
porcentaje = variacion19,
anio_base = 2019,
mes_corte = fecha_corte,
nombre_delito = nombre_delito,
tipo_periodo = "mensual",
tipo_tarjeta = "T"
)
}
if (length(variacion19) > 0 && !is.na(variacion19)) {
generar_tarjeta_variacion(
porcentaje = variacion19,
anio_base = 2019,
mes_corte = fecha_corte,
nombre_delito = nombre_delito,
tipo_periodo = "mensual",
tipo_tarjeta = "G"
)
}
variacion24 <- df %>%
filter(categoria_delito_modificada == nombre_delito) %>%
pull(var_2025_vs_2024)
if (length(variacion24) > 0 && !is.na(variacion24)) {
generar_tarjeta_variacion(
porcentaje = variacion24,
anio_base = 2024,
mes_corte = fecha_corte,
nombre_delito = nombre_delito,
tipo_periodo = "mensual",
tipo_tarjeta = "G"
)
}
interpretar_titulo <- function(valor) {
if (str_detect(valor, "-")) {
return("ContinÃºa la disminuciÃ³n")
} else if (valor == "0.0%" || valor == "0%") {
return("Sin cambio mensual")
} else if (!is.na(valor) && valor != "") {
return("Incremento mensual")
} else {
return("EvoluciÃ³n reciente")
}
}
asignar_flecha <- function(valor) {
if (str_detect(valor, "-")) {
return("../auxiliares/verde.png")
} else if (valor == "0.0%" || valor == "0%") {
return("../auxiliares/gris.png")
} else if (!is.na(valor) && valor != "") {
return("../auxiliares/rojo.png")
} else {
return(NA_character_)
}
}
# Construir nombre del archivo de la tarjeta mensual
archivo_tarjeta <- glue("VarMes_2019T_{nombre_archivo}.png")
# Calcular tÃ­tulo y flecha
titulo_mensual <- interpretar_titulo(variacion24)
flecha_mensual <- asignar_flecha(variacion24)
# Retornar como tibble
return(tibble(
archivo = nombre_archivo,
titulo_mensual = titulo_mensual,
flecha_mensual = flecha_mensual
))
}
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
#  3. Ejecutar para todos los delitos
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
delitos_deseados <- c(
"Alto Impacto",
"Homicidio doloso",
"Homicidio doloso (vÃ­ctimas)",
"Lesiones dolosas por disparo de arma de fuego",
"Robo de vehÃ­culo con y sin violencia"
# Agrega mÃ¡s segÃºn lo necesites
)
titulos_mensuales <- map_dfr(delitos_deseados,generar_mini_tabla_delito,df = tabla_formateada_sin_visibles)
titulos_actualizados <- titulos_existentes %>%
left_join(titulos_mensuales, by = "archivo")
write_csv(titulos_actualizados, ruta_csv)
library(here)
## Cargar las funciones
here::i_am( "orquestador.R")
scripts <- c("01_Tbl_absolutos.R" ,
"02_Tbl_promedios.R",
'03_Barras_alcaldias.R',
'04_Tbl_acumulados.R',
'05_Tbl_comparativo_mensual.R',
'06_Graf_lineas_acum.R',
'07_Graf_lineas_mes.R',
'08_barras_alc_sec_cuad.R',
'09_barras_homicidios_lesiones_alcaldia.R',
'10_mapa.R')
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
cat("â–¶ Ejecutando script Python para generar presentaciÃ³n...\n")
result_py <- system2("python", args = "Crear_ppt.py", stdout = TRUE, stderr = TRUE)
cat("Resultado del script Python:\n", paste(result_py, collapse = "\n"), "\n")
library(here)
## Cargar las funciones
here::i_am( "orquestador.R")
scripts <- c("01_Tbl_absolutos.R" ,
"02_Tbl_promedios.R",
'03_Barras_alcaldias.R',
'04_Tbl_acumulados.R',
'05_Tbl_comparativo_mensual.R',
'06_Graf_lineas_acum.R',
'07_Graf_lineas_mes.R',
'08_barras_alc_sec_cuad.R',
'09_barras_homicidios_lesiones_alcaldia.R',
'10_mapa.R')
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
library(here)
## Cargar las funciones
here::i_am( "orquestador.R")
scripts <- c("01_Tbl_absolutos.R" ,
"02_Tbl_promedios.R",
'03_Barras_alcaldias.R',
'04_Tbl_acumulados.R',
'05_Tbl_comparativo_mensual.R',
'06_Graf_lineas_acum.R',
'07_Graf_lineas_mes.R',
'08_barras_alc_sec_cuad.R',
'09_barras_homicidios_lesiones_alcaldia.R',
'10_mapa.R')
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
cat("â–¶ Ejecutando script Python para generar presentaciÃ³n...\n")
result_py <- system2("python", args = "Crear_ppt.py", stdout = TRUE, stderr = TRUE)
cat("Resultado del script Python:\n", paste(result_py, collapse = "\n"), "\n")
scripts <- c(
'06_Graf_lineas_acum.R',
'07_Graf_lineas_mes.R',
)
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
cat("â–¶ Ejecutando script Python para generar presentaciÃ³n...\n")
result_py <- system2("python", args = "Crear_ppt.py", stdout = TRUE, stderr = TRUE)
cat("Resultado del script Python:\n", paste(result_py, collapse = "\n"), "\n")
scripts <- c('06_Graf_lineas_acum.R',
'07_Graf_lineas_mes.R')
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
cat("â–¶ Ejecutando script Python para generar presentaciÃ³n...\n")
result_py <- system2("python", args = "Crear_ppt.py", stdout = TRUE, stderr = TRUE)
cat("Resultado del script Python:\n", paste(result_py, collapse = "\n"), "\n")
scripts <- c('06_Graf_lineas_acum.R',
'07_Graf_lineas_mes.R'
)
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
cat("â–¶ Ejecutando script Python para generar presentaciÃ³n...\n")
result_py <- system2("python", args = "Crear_ppt.py", stdout = TRUE, stderr = TRUE)
cat("Resultado del script Python:\n", paste(result_py, collapse = "\n"), "\n")
scripts <- c('06_Graf_lineas_acum.R',
'07_Graf_lineas_mes.R'
)
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
cat("â–¶ Ejecutando script Python para generar presentaciÃ³n...\n")
result_py <- system2("python", args = "Crear_ppt.py", stdout = TRUE, stderr = TRUE)
cat("Resultado del script Python:\n", paste(result_py, collapse = "\n"), "\n")
cat("â–¶ Ejecutando script Python para generar presentaciÃ³n...\n")
result_py <- system2("python", args = "Crear_ppt.py", stdout = TRUE, stderr = TRUE)
cat("Resultado del script Python:\n", paste(result_py, collapse = "\n"), "\n")
scripts <- c('06_Graf_lineas_acum.R',
'07_Graf_lineas_mes.R'
)
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
cat("â–¶ Ejecutando script Python para generar presentaciÃ³n...\n")
result_py <- system2("python", args = "Crear_ppt.py", stdout = TRUE, stderr = TRUE)
cat("Resultado del script Python:\n", paste(result_py, collapse = "\n"), "\n")
scripts <- c('06_Graf_lineas_acum.R',
'07_Graf_lineas_mes.R'
)
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
cat("â–¶ Ejecutando script Python para generar presentaciÃ³n...\n")
result_py <- system2("python", args = "Crear_ppt.py", stdout = TRUE, stderr = TRUE)
cat("Resultado del script Python:\n", paste(result_py, collapse = "\n"), "\n")
library(here)
## Cargar las funciones
here::i_am( "orquestador.R")
scripts <- c('06_Graf_lineas_acum.R',
'07_Graf_lineas_mes.R')
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
library(here)
## Cargar las funciones
here::i_am( "orquestador.R")
scripts <- c("01_Tbl_acumulados.R",
"02_Tbl_comparativo_mensual.R",
"03_Graf_lineas_acum.R",
"04_Graf_lineas_mes.R")
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
library(here)
## Cargar las funciones
here::i_am( "orquestador.R")
scripts <- c("01_Tbl_absolutos.R" ,
"02_Tbl_promedios.R",
'03_Barras_alcaldias.R',
'04_Tbl_acumulados.R',
'05_Tbl_comparativo_mensual.R',
'06_Graf_lineas_acum.R',
'07_Graf_lineas_mes.R',
'08_barras_alc_sec_cuad.R',
'09_barras_homicidios_lesiones_alcaldia.R',
'10_mapa.R')
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
scripts <- c('06_Graf_lineas_acum.R',
'07_Graf_lineas_mes.R')
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
scripts <- c('06_Graf_lineas_acum.R',
'07_Graf_lineas_mes.R')
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
scripts <- c('06_Graf_lineas_acum.R',
'07_Graf_lineas_mes.R')
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
scripts <- c('06_Graf_lineas_acum.R',
'07_Graf_lineas_mes.R')
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
scripts <- c(
'04_Tbl_acumulados.R',
'05_Tbl_comparativo_mensual.R'
)
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
scripts <- c(
'04_Tbl_acumulados.R',
'05_Tbl_comparativo_mensual.R'
)
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
scripts <- c(
'04_Tbl_acumulados.R',
'05_Tbl_comparativo_mensual.R'
)
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
scripts <- c(
'04_Tbl_acumulados.R',
'05_Tbl_comparativo_mensual.R'
)
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
scripts <- c(
'04_Tbl_acumulados.R',
'05_Tbl_comparativo_mensual.R'
)
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
library(here)
## Cargar las funciones
here::i_am( "orquestador.R")
scripts <- c("01_Tbl_absolutos.R" ,
"02_Tbl_promedios.R",
'03_Barras_alcaldias.R',
'04_Tbl_acumulados.R',
'05_Tbl_comparativo_mensual.R',
'06_Graf_lineas_acum.R',
'07_Graf_lineas_mes.R',
'08_barras_alc_sec_cuad.R',
'09_barras_homicidios_lesiones_alcaldia.R',
'10_mapa.R')
# Esto sirve para el debuggeo en local o desde bash
for (script in scripts) {
ruta_script <- file.path( script)
cat("Ejecutando", ruta_script, "\n")
result <- system2("Rscript", ruta_script, stdout = TRUE, stderr = TRUE)
cat("Resultado de", script, ":\n", paste(result, collapse = "\n"), "\n")
}
