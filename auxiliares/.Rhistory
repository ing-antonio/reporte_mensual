# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# ðŸ’¡ CÃ“DIGO PARA TABLA DE ACUMULADOS ðŸ’¡
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# 1. Cargar paquetes necesarios
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
pacman::p_load(
RPostgreSQL, dplyr, tidyr, gt, stringr, scales,
yaml, here, glue, lubridate,
showtext, sysfonts, ggplot2, purrr, readr
)
here()
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# 2. Cargar fuente y funciones
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# Agregar Roboto desde Google Fonts
font_add_google("Roboto", "roboto")
# Activar uso de showtext
showtext_auto()
#script de funciones se ubica en carpeta de auxiliares
source(here('auxiliares', "funciones_mensual.R"))
#Cargar archivo config que debe estar en carpeta de auxiliares
config_file <- here("auxiliares/config.yml")
config <- yaml::read_yaml(config_file)
# Conectar a la base de datos usando los valores del archivo de configuraciÃ³n
conn <- dbConnect(
"PostgreSQL",
dbname = config$db_name,
host = config$db_host,
port = config$db_port,
user = config$db_username,
password = config$db_password
)
dbSendQuery(conn, "SET client_encoding = 'UTF8';")
#  Query carpetas
# Obtener el primer dÃ­a del mes actual
fecha_corte <- floor_date(Sys.Date(), unit = "month")
anio_corte <- year(fecha_corte)
# Generar condiciones dinÃ¡micas para los aÃ±os deseados
anios_objetivo <- c(2019,2023, 2024, 2025)
filtros_fecha <- paste0(
"(fecha_inicio >= '", anios_objetivo, "-01-01' AND fecha_inicio < '", anios_objetivo, "-", sprintf("%02d", month(fecha_corte)), "-01')"
)
# Unir condiciones con OR
condicion_fecha <- paste(filtros_fecha, collapse = " OR ")
query_carpetas <- glue::glue("
SELECT
CASE
WHEN categoria_delito = 'Homicidio doloso' THEN 'Homicidio doloso'
ELSE categoria_delito
END AS categoria_delito_modificada,
EXTRACT(YEAR FROM fecha_inicio) AS anio,
COUNT(*) AS total_carpetas
FROM dashboard_seguridad.carpetas_directas_cc_cdmx
WHERE
categoria_delito != 'Delito de bajo impacto'
AND (
{condicion_fecha}
)
GROUP BY categoria_delito_modificada, anio
UNION ALL
SELECT
'Robo a pasajero a bordo del metrobÃºs con violencia' AS categoria_delito_modificada,
EXTRACT(YEAR FROM fecha_inicio) AS anio,
COUNT(*) AS total_carpetas
FROM dashboard_seguridad.carpetas_directas_cc_cdmx
WHERE
delito IN ('Robo a pasajero a bordo de MetrobÃºs con violencia')
AND (
{condicion_fecha}
)
GROUP BY anio
")
datos_carpetas <- dbGetQuery(conn, query_carpetas)
#  Query vÃ­ctimas
filtros_fecha2 <- paste0(
"(fechainicio >= '", anios_objetivo, "-01-01' AND fechainicio < '", anios_objetivo, "-", sprintf("%02d", month(fecha_corte)), "-01')"
)
# Unir condiciones con OR
condicion_fecha2 <- paste(filtros_fecha2, collapse = " OR ")
query_victimas <- glue::glue( "
SELECT
'Homicidio doloso (vÃ­ctimas)' AS categoria_delito_modificada,
EXTRACT(YEAR FROM fechainicio) AS anio,
COUNT(*) AS total_carpetas
FROM dashboard_seguridad.victimas
WHERE
{condicion_fecha2}
GROUP BY anio
")
datos_victimas <- dbGetQuery(conn, query_victimas)
#  Combinar carpetas + vÃ­ctimas
datos <- bind_rows(datos_carpetas,datos_victimas)
#Guardar rdata
save(datos, file = here("datos", "datos_crudos.RData"))
tabla <- datos %>%
pivot_wider(
names_from = anio,
values_from = total_carpetas,
names_prefix = "total_"
) %>%
mutate(
total_2019 = replace_na(total_2019, 0),
total_2023 = replace_na(total_2023, 0),
total_2024 = replace_na(total_2024, 0),
total_2025 = replace_na(total_2025, 0),
var_2025_vs_2019 = variaciones(total_2025, total_2019),
var_2025_vs_2023 = variaciones(total_2025, total_2023),
var_2025_vs_2024 = variaciones(total_2025, total_2024)
) %>%
arrange(desc(total_2025))
#  Fila Alto impacto
fila_total <- tabla %>%
filter(categoria_delito_modificada != "Homicidio doloso (vÃ­ctimas)" & categoria_delito_modificada != "Robo a pasajero a bordo del metrobÃºs con violencia") %>%   # ðŸ‘ˆ excluye vÃ­ctimas y robo metrobus
summarise(
categoria_delito_modificada = "Alto Impacto",
total_2019 = sum(total_2019, na.rm = TRUE),
total_2023 = sum(total_2023, na.rm = TRUE),
total_2024 = sum(total_2024, na.rm = TRUE),
total_2025 = sum(total_2025, na.rm = TRUE)
) %>%
mutate(
var_2025_vs_2019 = variaciones0(total_2025, total_2019),
var_2025_vs_2023 = variaciones0(total_2025, total_2023),
var_2025_vs_2024 = variaciones0(total_2025, total_2024)
)
#  Fila robo de vehÃ­culo c/s violencia
fila_robo <- tabla %>%
filter(categoria_delito_modificada == "Robo de vehÃ­culo con violencia" | categoria_delito_modificada == "Robo de vehÃ­culo sin violencia") %>%
summarise(
categoria_delito_modificada = "Robo de vehÃ­culo con y sin violencia",
total_2019 = sum(total_2019, na.rm = TRUE),
total_2023 = sum(total_2023, na.rm = TRUE),
total_2024 = sum(total_2024, na.rm = TRUE),
total_2025 = sum(total_2025, na.rm = TRUE)
) %>%
mutate(
var_2025_vs_2019 = variaciones0(total_2025, total_2019),
var_2025_vs_2023 = variaciones0(total_2025, total_2023),
var_2025_vs_2024 = variaciones0(total_2025, total_2024)
)
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# 6. Unir las tablas
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
tabla_formateada <- bind_rows(fila_total,fila_robo, tabla)
# Crear vector de orden
orden_delitos <- c(
"Alto Impacto" = 1,
"Homicidio doloso" = 2,
"Homicidio doloso (vÃ­ctimas)" = 3,
"Lesiones dolosas por disparo de arma de fuego" = 4,
"Robo a transeunte en vÃ­a pÃºblica con y sin violencia" = 5,
"Robo a transeunte en vÃ­a pÃºblica con violencia" = 6,
"Robo a transeunte en vÃ­a pÃºblica sin violencia" = 7,
"Robo de vehÃ­culo con y sin violencia" = 8,
"Robo de vehÃ­culo con violencia" = 9,
"Robo de vehÃ­culo sin violencia" = 10,
"Secuestro" = 11,
"ViolaciÃ³n" = 12,
"Robo a negocio con violencia" = 13,
"Robo a pasajero a bordo del metro con y sin violencia" = 14,
"Robo a repartidor con y sin violencia" = 15,
"Robo a pasajero a bordo de microbus con y sin violencia" = 16,
"Robo a cuentahabiente saliendo del cajero con violencia" = 17,
"Robo a pasajero a bordo de taxi con violencia" = 18,
"Robo a casa habitaciÃ³n con violencia" = 19,
"Robo a transportista con y sin violencia" = 20,
"Robo a transeÃºnte en vÃ­a pÃºblica con y sin violencia" = 21,
"Robo a pasajero a bordo de microbÃºs con y sin violencia" = 22,
"Delito de bajo impacto" = 23,
"Robo a transeÃºnte en vÃ­a pÃºblica con violencia" = 24,
"Robo a transeÃºnte en vÃ­a pÃºblica sin violencia" = 25,
"Robo a pasajero a bordo del metro con violencia" = 26,
"Robo a pasajero a bordo del metro sin violencia" = 27,
"Robo a pasajero a bordo de metrobÃºs con violencia" = 28
)
#Aqui se pueden quitar delitos de la tabla (si es que lo piden)
tabla_formateada_sin_visibles <- tabla_formateada %>%
filter(
!categoria_delito_modificada %in% c("Robo a pasajero a bordo de metrobÃºs con violencia")
) %>%
mutate(
orden = orden_delitos[categoria_delito_modificada]
) %>%
arrange(orden)
# Fecha de corte: primer dÃ­a del mes actual
fecha_corte <- floor_date(Sys.Date(), unit = "month")
# Mes anterior completo (Ãºltimo mes con datos cerrados)
fecha_ultimo_mes <- fecha_corte - months(1)
# Obtener nombre completo del mes (en espaÃ±ol)
nombre_mes <- format(fecha_ultimo_mes, "%B") |> tools::toTitleCase()
# AÃ±os relevantes
anios <- c(2019,2023, 2024, 2025)
etiquetas_totales <- setNames(
glue("Ene-{nombre_mes} {anios}"),
paste0("total_", anios)
)
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# 8. Secrea la tabla gt
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
gt_tabla <- tabla_formateada_sin_visibles %>%
select(
categoria_delito_modificada,
total_2019, total_2023, total_2024, total_2025,
var_2025_vs_2019, var_2025_vs_2023, var_2025_vs_2024
) %>%
gt() %>%
cols_label(.list = c(
categoria_delito_modificada = "CategorÃ­a del delito",
etiquetas_totales,
var_2025_vs_2019 = "Var % vs 2019",
var_2025_vs_2023 = "Var % vs 2023",
var_2025_vs_2024 = "Var % vs 2024"
)) %>%
fmt_number(
columns = c(total_2025, total_2023, total_2024, total_2019),
decimals = 0,
sep_mark = ",",
drop_trailing_zeros = TRUE
) %>%
##  Estilo encabezados
tab_style(
style = list(
cell_fill(color = "#9d2041ff"),
cell_text(color = "white", weight = "bold", size = px(16))
),
locations = cells_column_labels(everything())
) %>%
##  Fondo fila total delitos de alto impacto
tab_style(
style = list (cell_fill(color = "#DAD1C5"), cell_text(weight = "bold")),
locations = cells_body(rows = categoria_delito_modificada == "Alto Impacto")
) %>%
# SangrÃ­a para todos excepto "Alto Impacto" y subtipos de robo de vehÃ­culo
tab_style(
style = cell_text(indent = px(16)),
locations = cells_body(columns = categoria_delito_modificada,
rows = categoria_delito_modificada != "Alto Impacto" &
categoria_delito_modificada != "Robo de vehÃ­culo con violencia" &
categoria_delito_modificada != "Robo de vehÃ­culo sin violencia")
) %>%
# SangrÃ­a grande para los subtipos de robo de vehÃ­culo y vÃ­ctimas
tab_style(
style = cell_text(indent = px(32)),
locations = cells_body(
columns = categoria_delito_modificada,
rows = categoria_delito_modificada %in% c("Homicidio doloso (vÃ­ctimas)", "Robo de vehÃ­culo con violencia", "Robo de vehÃ­culo sin violencia")
)
) %>%
## Fondo verde para variaciÃ³n negativa (disminuciÃ³n)
tab_style(
style = list(cell_fill(color = "#E7FBF1"), cell_text(color = "#2A6F4D")),
locations = list(
cells_body(columns = var_2025_vs_2019, rows = str_detect(var_2025_vs_2019, "-")),
cells_body(columns = var_2025_vs_2023, rows = str_detect(var_2025_vs_2023, "-")),
cells_body(columns = var_2025_vs_2024, rows = str_detect(var_2025_vs_2024, "-"))
)
) %>%
## Fondo rojo para variaciÃ³n positiva (aumento)
tab_style(
style = list(cell_fill(color = "#FCDADE"), cell_text(color = "#940B1C")),
locations = list(
cells_body(columns = var_2025_vs_2019, rows = !str_detect(var_2025_vs_2019, "-") & var_2025_vs_2019 != "0%"),
cells_body(columns = var_2025_vs_2023, rows = !str_detect(var_2025_vs_2023, "-") & var_2025_vs_2023 != "0%"),
cells_body(columns = var_2025_vs_2024, rows = !str_detect(var_2025_vs_2024, "-") & var_2025_vs_2024 != "0%")
)
) %>%
## Fondo gris para sin cambio (0%)
tab_style(
style = list(cell_fill(color = "#DDDDDD"), cell_text(color = "#252627")),
locations = list(
cells_body(columns = var_2025_vs_2019, rows = var_2025_vs_2019 == "0%"),
cells_body(columns = var_2025_vs_2023, rows = var_2025_vs_2023 == "0%"),
cells_body(columns = var_2025_vs_2024, rows = var_2025_vs_2024 == "0%")
)
)%>%
tab_options(
table.font.names = "roboto",
table.width = "100%",
table.font.size = px(13),
data_row.padding = px(4)
)
# Mostrar
gt_tabla
ruta_salida <- here("salidas", "Tbl_acumulados.png")
if (file.exists(ruta_salida)) {
file.remove(ruta_salida)
}
gtsave(
data = gt_tabla,
filename = ruta_salida,
vwidth = 1200,
vheight = 1000
)
library(here)
## Cargar las funciones
here::i_am( "orquestador.R")
